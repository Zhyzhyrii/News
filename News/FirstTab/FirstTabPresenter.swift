//
//  FirstTabPresenter.swift
//  News
//
//  Created by Игорь on 19.12.2019.
//  Copyright (c) 2019 Igor Zhyzhyrii. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FirstTabPresentationLogic {
    func presentNews(response: FirstTab.GetNews.Response)
    func presentNewsByRefreshing(response: FirstTab.RefreshNews.Response)
}

class FirstTabPresenter: FirstTabPresentationLogic {
    
    weak var viewController: FirstTabDisplayLogic?
    
    // MARK: Present news
    
    func presentNews(response: FirstTab.GetNews.Response) {
        
        let news = prepareDisplayedNews(response.news)
        
        let viewModel = FirstTab.GetNews.ViewModel(news: news)
        viewController?.displayNews(viewModel: viewModel)
        
    }
    
    // MARK: - Present news by refreshing
    
    func presentNewsByRefreshing(response: FirstTab.RefreshNews.Response) {
        
        let news = prepareDisplayedNews(response.news)
        
        let viewModel = FirstTab.RefreshNews.ViewModel(news: news)
        viewController?.displayNewsByRefreshing(viewModel: viewModel)
        
    }
    
    // MARK: - Prepare displayed news
    
    private func prepareDisplayedNews(_ news: [New]) -> [DisplayedNew] {
        
        var displayedNews: [DisplayedNew] = []
        news.forEach { (new) in
            let title = new.title ?? ""
            let description = new.descripton ?? ""
            let imageRef = new.imageRef ?? ""
            
            let displayedNew = DisplayedNew(title: title, descripton: description, imageRef: imageRef)
            displayedNews.append(displayedNew)
        }
        return displayedNews
    }
    
}
