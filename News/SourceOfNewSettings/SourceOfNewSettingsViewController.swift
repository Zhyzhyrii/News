//
//  SourceOfNewSettingsViewController.swift
//  News
//
//  Created by Игорь on 29.12.2019.
//  Copyright (c) 2019 Igor Zhyzhyrii. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SourceOfNewSettingsDisplayLogic: class {
    func displaySourcesOfNews(viewModel: SourceOfNewSettings.DisplaySourceOfNew.ViewModel)
    func displaySelectedSourceOfNew(viewModel: SourceOfNewSettings.SelectNewSource.ViewModel)
}

class SourceOfNewSettingsViewController: UITableViewController, SourceOfNewSettingsDisplayLogic {
    
    // MARK: - Outlets
    
    //@IBOutlet private var nameTextField: UITextField!
    
    // MARK: - Public properties
    
    var interactor: SourceOfNewSettingsBusinessLogic?
    var router: (NSObjectProtocol & SourceOfNewSettingsRoutingLogic & SourceOfNewSettingsDataPassing)?
    
    // MARK: - Private properties
    
    private var feedsModels: [FeedModel]!
    
    // MARK: - Object lifecycle
    
    //    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    //        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    //    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        
        SourceOfNewSettingsConfigurator.shared.configure(with: self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        displaySourceOfNew()
    }
    
    // MARK: - Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    func displaySomething(viewModel: SourceOfNewSettings.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
    
    // MARK: - Display source of new
    
    func displaySourceOfNew() {
        let request = SourceOfNewSettings.DisplaySourceOfNew.Request()
        interactor?.displaySourceOfNew(request: request)
    }
    
    func displaySourcesOfNews(viewModel: SourceOfNewSettings.DisplaySourceOfNew.ViewModel) {
        displaySourcesOfNews(feedsModels: viewModel.feedsModels)
    }
    
    // MARK: - Select new`s source
    
    func selectNewSource(tableView: UITableView, indexPath: IndexPath) {
        let request = SourceOfNewSettings.SelectNewSource.Request(feed: feedsModels[indexPath.row])
        interactor?.selectNewSource(request: request)
    }
    
    func displaySelectedSourceOfNew(viewModel: SourceOfNewSettings.SelectNewSource.ViewModel) {
        displaySourcesOfNews(feedsModels: viewModel.feedsModels)
    }
    
    // MARK: - Private methods
    
    private func displaySourcesOfNews(feedsModels: [FeedModel]) {
        self.feedsModels = feedsModels
        tableView.reloadData()
        for index in 0..<feedsModels.count {
            tableView.cellForRow(at: IndexPath(row: index, section: 0))?.accessoryType = (feedsModels[index].isSelected) ? .checkmark : .none
        }
        
        if let indexPathForSelectedRow = tableView.indexPathForSelectedRow {
            tableView.deselectRow(at: indexPathForSelectedRow, animated: true)
        }
    }
}

extension SourceOfNewSettingsViewController {
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return feedsModels.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        cell.textLabel?.text = feedsModels[indexPath.row].feedName
        
        return cell
    }
}

extension SourceOfNewSettingsViewController {
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        selectNewSource(tableView: tableView, indexPath: indexPath)
    }
    
}
